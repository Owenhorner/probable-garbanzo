name: Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Playwright Test
        run: npm install @playwright/test@latest

      - name: Upload node_modules
        uses: actions/upload-artifact@v4
        with:
          name: node_modules
          path: |
            node_modules/
            package.json
            package-lock.json

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules

      - name: Rebuild Node Modules
        run: npm rebuild

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        id: cache-playwright-browsers
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/playwright.config.ts') }}

      - name: Install Playwright Browsers & Dependencies
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: |
          npx playwright install-deps
          npx playwright install

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}